{
    "componentChunkName": "component---src-templates-post-template-tsx",
    "path": "/articles/2021/code-highlight",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"slug\": \"/articles/2021/code-highlight\",\n  \"title\": \"Code Highlight Style test\",\n  \"date\": \"2021-11-14 22:13\",\n  \"categories\": [\"test\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Make sure all the code blocks highlighted correctly. All the code samples are come from the demo of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://highlightjs.org\"\n  }, \"https://highlightjs.org\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\"\n  }, \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"#[derive(Debug)]\\npub enum State {\\n    Start,\\n    Transient,\\n    Closed,\\n}\\n\\nimpl From<&'a str> for State {\\n    fn from(s: &'a str) -> Self {\\n        match s {\\n            \\\"start\\\" => State::Start,\\n            \\\"closed\\\" => State::Closed,\\n            _ => unreachable!(),\\n        }\\n    }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"[\\n  {\\n    \\\"title\\\": \\\"apples\\\",\\n    \\\"count\\\": [12000, 20000],\\n    \\\"description\\\": {\\\"text\\\": \\\"...\\\", \\\"sensitive\\\": false}\\n  },\\n  {\\n    \\\"title\\\": \\\"oranges\\\",\\n    \\\"count\\\": [17500, null],\\n    \\\"description\\\": {\\\"text\\\": \\\"...\\\", \\\"sensitive\\\": false}\\n  }\\n]\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"@requires_authorization\\ndef somefunc(param1='', param2=0):\\n    r'''A docstring'''\\n    if param1 > param2: # interesting\\n        print 'Gre\\\\'ater'\\n    return (param2 - param1 + 1 + 0b10l) or None\\n\\nclass SomeClass:\\n    pass\\n\\n>>> message = '''interpreter\\n... prompt'''\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<!DOCTYPE html>\\n<title>Title</title>\\n\\n<style>body {width: 500px;}</style>\\n\\n<script type=\\\"application/javascript\\\">\\n  function $init() {return true;}\\n</script>\\n\\n<body>\\n  <p checked class=\\\"title\\\" id='title'>Title</p>\\n  <!-- here goes the rest of the page -->\\n</body>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"function $initHighlight(block, cls) {\\n  try {\\n    if (cls.search(/\\\\bno\\\\-highlight\\\\b/) != -1)\\n      return process(block, true, 0x0F) +\\n             ` class=\\\"${cls}\\\"`;\\n  } catch (e) {\\n    /* handle exception */\\n  }\\n  for (var i = 0 / 2; i < classes.length; i++) {\\n    if (checkCondition(classes[i]) === undefined)\\n      console.log('undefined');\\n  }\\n\\n  return (\\n    <div>\\n      <web-component>{block}</web-component>\\n    </div>\\n  )\\n}\\n\\nexport $initHighlight;\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"#include <iostream>\\n\\nint main(int argc, char *argv[]) {\\n\\n  /* An annoying \\\"Hello World\\\" example */\\n  for (auto i = 0; i < 0xFFFF; i++)\\n    cout << \\\"Hello, World!\\\" << endl;\\n\\n  char c = '\\\\n';\\n  unordered_map <string, vector<string> > m;\\n  m[\\\"key\\\"] = \\\"\\\\\\\\\\\\\\\\\\\"; // this is an error\\n\\n  return -2e3 + 12l;\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"CREATE TABLE \\\"topic\\\" (\\n    \\\"id\\\" serial NOT NULL PRIMARY KEY,\\n    \\\"forum_id\\\" integer NOT NULL,\\n    \\\"subject\\\" varchar(255) NOT NULL\\n);\\nALTER TABLE \\\"topic\\\"\\nADD CONSTRAINT forum_id FOREIGN KEY (\\\"forum_id\\\")\\nREFERENCES \\\"forum\\\" (\\\"id\\\");\\n\\n-- Initials\\ninsert into \\\"topic\\\" (\\\"forum_id\\\", \\\"subject\\\")\\nvalues (2, 'D''artagnian');\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-objectivec\"\n  }, \"#import <UIKit/UIKit.h>\\n#import \\\"Dependency.h\\\"\\n\\n@protocol WorldDataSource\\n@optional\\n- (NSString*)worldName;\\n@required\\n- (BOOL)allowsToLive;\\n@end\\n\\n@property (nonatomic, readonly) NSString *title;\\n- (IBAction) show;\\n@end\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"/**\\n * @author John Smith <john.smith@example.com>\\n*/\\npackage l2f.gameserver.model;\\n\\npublic abstract class L2Char extends L2Object {\\n  public static final Short ERROR = 0x0001;\\n\\n  public void moveTo(int x, int y, int z) {\\n    _ai = null;\\n    log(\\\"Should not be called\\\");\\n    if (1 > 5) { // wtf!?\\n      return;\\n    }\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-swift\"\n  }, \"import Foundation\\n\\n@objc class Person: Entity {\\n  var name: String!\\n  var age:  Int!\\n\\n  init(name: String, age: Int) {\\n    /* /* ... */ */\\n  }\\n\\n  // Return a descriptive string for this person\\n  func description(offset: Int = 0) -> String {\\n    return \\\"\\\\(name) is \\\\(age + offset) years old\\\"\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"@font-face {\\n  font-family: Chunkfive; src: url('Chunkfive.otf');\\n}\\n\\nbody, .usertext {\\n  color: #F0F0F0; background: #600;\\n  font-family: Chunkfive, sans;\\n}\\n\\n@import url(print.css);\\n@media print {\\n  a[href^=http]::after {\\n    content: attr(href)\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ruby\"\n  }, \"# The Greeter class\\nclass Greeter\\n  def initialize(name)\\n    @name = name.capitalize\\n  end\\n\\n  def salute\\n    puts \\\"Hello #{@name}!\\\"\\n  end\\nend\\n\\ng = Greeter.new(\\\"world\\\")\\ng.salute\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-makefile\"\n  }, \"# Makefile\\n\\nBUILDDIR      = _build\\nEXTRAS       ?= $(BUILDDIR)/extras\\n\\n.PHONY: main clean\\n\\nmain:\\n    @echo \\\"Building main facility...\\\"\\n    build_main $(BUILDDIR)\\n\\nclean:\\n    rm -rf $(BUILDDIR)/*\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package main\\n\\nimport \\\"fmt\\\"\\n\\nfunc main() {\\n    ch := make(chan float64)\\n    ch <- 1.0e10    // magic number\\n    x, ok := <- ch\\n    defer fmt.Println(`exitting now\\\\`)\\n    go println(len(\\\"hello world!\\\"))\\n    return\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"#!/bin/bash\\n\\n###### CONFIG\\nACCEPTED_HOSTS=\\\"/root/.hag_accepted.conf\\\"\\nBE_VERBOSE=false\\n\\nif [ \\\"$UID\\\" -ne 0 ]\\nthen\\n  echo \\\"Superuser rights required\\\"\\n  exit 2\\nfi\\n\\ngenApacheConf(){\\n  echo -e \\\"# Host ${HOME_DIR}$1/$2 :\\\"\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ini\"\n  }, \"; boilerplate\\n[package]\\nname = \\\"some_name\\\"\\nauthors = [\\\"Author\\\"]\\ndescription = \\\"This is \\\\\\na description\\\"\\n\\n[[lib]]\\nname = ${NAME}\\ndefault = True\\nauto = no\\ncounter = 1_000\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Code Highlight Style test"}}},"pageContext":{"slug":"/articles/2021/code-highlight"}},
    "staticQueryHashes": ["2744905544"]}